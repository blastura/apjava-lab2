<?xml version="1.0" encoding="utf-8"?>
<project name="apjava-lab2" default="compile" basedir=".">
  <!-- Properties -->
  <property name="prj.java.version" value="1.6"/>
  
  <!-- Dir Properties -->
  <property name="build.dir" location="bin"/>
  <property name="build.main.dir" location="${build.dir}/main"/>
  <property name="build.test.dir" location="${build.dir}/test"/>
  <property name="doc.dir" location="doc"/>
  <property name="src.dir" location="src"/>
  <property name="src.resources.dir" location="${src.dir}/resources"/>
  <property name="src.config.dir" location="${src.dir}/config"/>
  <property name="lib.dir" location="lib"/>
  <property name="test.dir" location="test"/>
  <property name="test.config.dir" location="${test.dir}/config"/>
  <property name="index.dir" location="index"/>
  
  <!-- Classpath -->
  <path id="project.classpath">
    <pathelement location="${build.main.dir}" />
    <pathelement location="${build.test.dir}" />
    <fileset dir="${lib.dir}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <target name="prepare">
    <mkdir dir="${build.main.dir}"/>
    <mkdir dir="${build.test.dir}"/>
  </target>

  <target name="clean"> 
    <delete dir="${build.dir}" /> 
  </target> 

  <target name="compile" depends="prepare">
    <!-- Copy dirs -->
    <copy todir="${build.main.dir}/resources">
      <fileset dir="${src.resources.dir}"/>
    </copy>
    <copy todir="${build.main.dir}/config">
      <fileset dir="${src.config.dir}"/>
    </copy>
    
    <!-- Compile source -->
    <!-- source="${prj.java.version}" target="${prj.java.version}" -->
    <javac srcdir="${src.dir}" destdir="${build.main.dir}" debug="on">
      <classpath refid="project.classpath" />
      <!-- <compilerarg value="-Xlint:unchecked"/> -->
    </javac>
  </target>

  <target name="compile-tests" depends="compile">
    <javac srcdir="${test.dir}" destdir="${build.test.dir}">
      <classpath refid="project.classpath" />
    </javac>
  </target>

  <target name="test" depends="compile-tests">
    <!-- Copy dirs -->
    <copy todir="${build.test.dir}/config">
      <fileset dir="${test.config.dir}"/>
    </copy>
    <copy todir="${build.test.dir}/resources">
      <fileset dir="${src.resources.dir}"/>
    </copy>
    
    <!-- Compile tests -->
    <junit haltonfailure="true" dir="${build.test.dir}" fork="true">
      <classpath refid="project.classpath" />
      <formatter type="plain" usefile="false" />
      <batchtest>
        <fileset dir="${build.test.dir}"
                 includes="**/*Test.class" />
      </batchtest>
      <sysproperty key="doc.dir" value="${doc.dir}" />
      <sysproperty key="index.dir" value="${index.dir}" />
    </junit>
  </target>

  <target name="javadoc" description="Generaties javadoc">
    <javadoc destdir="${doc.dir}">
      <fileset dir="${src.dir}/" includes="**/*.java"/>
    </javadoc>
  </target>

  <target name="test-run" description="Run JeedReader" depends="compile">
    <java classname="JeedReader" fork="true" dir="${build.main.dir}">
      <classpath refid="project.classpath" />
      <!-- <arg value="somevalue"/> -->
    </java>
  </target>

  <target name="print-classpath" description="Prints classpath, convenient for export to emacs and jde-mode">
    <property name="classpath" refid="project.classpath"/>
    <echo message="-classpath-${classpath}-classpath-"/>
  </target>
</project>